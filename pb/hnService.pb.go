//protoc --go_out=plugins=grpc:../pb/ *.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v4.22.0
// source: nhService.proto

package hnService

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nhService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_nhService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_nhService_proto_rawDescGZIP(), []int{0}
}

type Story struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Url   string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Story) Reset() {
	*x = Story{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nhService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Story) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Story) ProtoMessage() {}

func (x *Story) ProtoReflect() protoreflect.Message {
	mi := &file_nhService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Story.ProtoReflect.Descriptor instead.
func (*Story) Descriptor() ([]byte, []int) {
	return file_nhService_proto_rawDescGZIP(), []int{1}
}

func (x *Story) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Story) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type TopStories struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stories []*Story `protobuf:"bytes,1,rep,name=stories,proto3" json:"stories,omitempty"`
}

func (x *TopStories) Reset() {
	*x = TopStories{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nhService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopStories) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopStories) ProtoMessage() {}

func (x *TopStories) ProtoReflect() protoreflect.Message {
	mi := &file_nhService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopStories.ProtoReflect.Descriptor instead.
func (*TopStories) Descriptor() ([]byte, []int) {
	return file_nhService_proto_rawDescGZIP(), []int{2}
}

func (x *TopStories) GetStories() []*Story {
	if x != nil {
		return x.Stories
	}
	return nil
}

type TopStoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TopStoriesRequest) Reset() {
	*x = TopStoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nhService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopStoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopStoriesRequest) ProtoMessage() {}

func (x *TopStoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nhService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopStoriesRequest.ProtoReflect.Descriptor instead.
func (*TopStoriesRequest) Descriptor() ([]byte, []int) {
	return file_nhService_proto_rawDescGZIP(), []int{3}
}

type WhoisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *WhoisRequest) Reset() {
	*x = WhoisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nhService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhoisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhoisRequest) ProtoMessage() {}

func (x *WhoisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nhService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhoisRequest.ProtoReflect.Descriptor instead.
func (*WhoisRequest) Descriptor() ([]byte, []int) {
	return file_nhService_proto_rawDescGZIP(), []int{4}
}

func (x *WhoisRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nick     string `protobuf:"bytes,1,opt,name=nick,proto3" json:"nick,omitempty"`
	Karma    uint64 `protobuf:"varint,2,opt,name=karma,proto3" json:"karma,omitempty"`
	About    string `protobuf:"bytes,3,opt,name=about,proto3" json:"about,omitempty"`
	JoinedAt string `protobuf:"bytes,4,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nhService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_nhService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_nhService_proto_rawDescGZIP(), []int{5}
}

func (x *User) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *User) GetKarma() uint64 {
	if x != nil {
		return x.Karma
	}
	return 0
}

func (x *User) GetAbout() string {
	if x != nil {
		return x.About
	}
	return ""
}

func (x *User) GetJoinedAt() string {
	if x != nil {
		return x.JoinedAt
	}
	return ""
}

var File_nhService_proto protoreflect.FileDescriptor

var file_nhService_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6e, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x68, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x07, 0x0a, 0x05,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2f, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x38, 0x0a, 0x0a, 0x54, 0x6f, 0x70, 0x53, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x22, 0x13, 0x0a, 0x11, 0x54, 0x6f, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x22, 0x0a, 0x0c, 0x57, 0x68, 0x6f, 0x69, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x63, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x69, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x61, 0x72, 0x6d, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b, 0x61, 0x72, 0x6d, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x62, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x62, 0x6f, 0x75,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x32, 0x88,
	0x01, 0x0a, 0x09, 0x48, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x2e,
	0x68, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x6f, 0x70, 0x53, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x68, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x6f, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x05, 0x57, 0x68, 0x6f, 0x69, 0x73, 0x12, 0x17, 0x2e,
	0x68, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x68, 0x6f, 0x69, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x68, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x3b, 0x68,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nhService_proto_rawDescOnce sync.Once
	file_nhService_proto_rawDescData = file_nhService_proto_rawDesc
)

func file_nhService_proto_rawDescGZIP() []byte {
	file_nhService_proto_rawDescOnce.Do(func() {
		file_nhService_proto_rawDescData = protoimpl.X.CompressGZIP(file_nhService_proto_rawDescData)
	})
	return file_nhService_proto_rawDescData
}

var file_nhService_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_nhService_proto_goTypes = []interface{}{
	(*Empty)(nil),             // 0: hnService.Empty
	(*Story)(nil),             // 1: hnService.Story
	(*TopStories)(nil),        // 2: hnService.TopStories
	(*TopStoriesRequest)(nil), // 3: hnService.TopStoriesRequest
	(*WhoisRequest)(nil),      // 4: hnService.WhoisRequest
	(*User)(nil),              // 5: hnService.User
}
var file_nhService_proto_depIdxs = []int32{
	1, // 0: hnService.TopStories.stories:type_name -> hnService.Story
	3, // 1: hnService.HnService.GetTopStories:input_type -> hnService.TopStoriesRequest
	4, // 2: hnService.HnService.Whois:input_type -> hnService.WhoisRequest
	2, // 3: hnService.HnService.GetTopStories:output_type -> hnService.TopStories
	5, // 4: hnService.HnService.Whois:output_type -> hnService.User
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_nhService_proto_init() }
func file_nhService_proto_init() {
	if File_nhService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nhService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nhService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Story); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nhService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopStories); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nhService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopStoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nhService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhoisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nhService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nhService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nhService_proto_goTypes,
		DependencyIndexes: file_nhService_proto_depIdxs,
		MessageInfos:      file_nhService_proto_msgTypes,
	}.Build()
	File_nhService_proto = out.File
	file_nhService_proto_rawDesc = nil
	file_nhService_proto_goTypes = nil
	file_nhService_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HnServiceClient is the client API for HnService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HnServiceClient interface {
	GetTopStories(ctx context.Context, in *TopStoriesRequest, opts ...grpc.CallOption) (*TopStories, error)
	Whois(ctx context.Context, in *WhoisRequest, opts ...grpc.CallOption) (*User, error)
}

type hnServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHnServiceClient(cc grpc.ClientConnInterface) HnServiceClient {
	return &hnServiceClient{cc}
}

func (c *hnServiceClient) GetTopStories(ctx context.Context, in *TopStoriesRequest, opts ...grpc.CallOption) (*TopStories, error) {
	out := new(TopStories)
	err := c.cc.Invoke(ctx, "/hnService.HnService/GetTopStories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hnServiceClient) Whois(ctx context.Context, in *WhoisRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/hnService.HnService/Whois", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HnServiceServer is the server API for HnService service.
type HnServiceServer interface {
	GetTopStories(context.Context, *TopStoriesRequest) (*TopStories, error)
	Whois(context.Context, *WhoisRequest) (*User, error)
}

// UnimplementedHnServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHnServiceServer struct {
}

func (*UnimplementedHnServiceServer) GetTopStories(context.Context, *TopStoriesRequest) (*TopStories, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTopStories not implemented")
}
func (*UnimplementedHnServiceServer) Whois(context.Context, *WhoisRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Whois not implemented")
}

func RegisterHnServiceServer(s *grpc.Server, srv HnServiceServer) {
	s.RegisterService(&_HnService_serviceDesc, srv)
}

func _HnService_GetTopStories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopStoriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HnServiceServer).GetTopStories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hnService.HnService/GetTopStories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HnServiceServer).GetTopStories(ctx, req.(*TopStoriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HnService_Whois_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WhoisRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HnServiceServer).Whois(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hnService.HnService/Whois",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HnServiceServer).Whois(ctx, req.(*WhoisRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HnService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hnService.HnService",
	HandlerType: (*HnServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTopStories",
			Handler:    _HnService_GetTopStories_Handler,
		},
		{
			MethodName: "Whois",
			Handler:    _HnService_Whois_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nhService.proto",
}
